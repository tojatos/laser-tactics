version: '3.7'
services:
  angular:
    restart: always
    build:
      context: ./laser-chess-frontend
      dockerfile: Dockerfile.prod
    image: tojatos/laser-tactics-frontend
    networks:
      - web
      - default
    depends_on:
      - fastapi
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.laser-tactics-front.rule=(Host(`lasertactics.online`) || Host(`www.lasertactics.online`))"
      - "traefik.http.routers.laser-tactics-front.tls=true"
      - "traefik.http.routers.laser-tactics-front.tls.certresolver=myresolver"
      - "traefik.http.services.laser-tactics-front.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_default"

  fastapi:
    build: ./laser-chess-backend
    image: tojatos/laser-tactics-backend
    restart: always
    command: python -m app.main
    networks:
      - web
      - default
    depends_on:
      - db
    environment:
      - SQLALCHEMY_DATABASE_URL=postgresql://postgres:admin@db:5432/laserchess
      - HOST=0.0.0.0
      - PORT=80
      - ROOT_PATH=/laser-tactics-api
      - FE_HOST=www.lasertactics.online
      - VERIFY_MAIL_FROM = verification@lasertactics.online
      - VERIFY_MAIL_USERNAME = verification@lasertactics.online
      - VERIFY_MAIL_PASSWORD = Verify123!@#
      - VERIFY_MAIL_PORT = 587
      - VERIFY_MAIL_SERVER = smtppro.zoho.eu
      - MAIL_FROM = lasertactics@lasertactics.online
      - MAIL_USERNAME = lasertactics@lasertactics.online
      - MAIL_PASSWORD = r_B?KE@MU3nFnyG
      - MAIL_PORT = 587
      - MAIL_SERVER = smtppro.zoho.eu
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.laser-tactics-api-stripprefix.stripPrefix.prefixes=/laser-tactics-api"
      - "traefik.http.routers.laser-tactics-api.rule=((Host(`lasertactics.online`) || Host(`www.lasertactics.online`)) && PathPrefix(`/laser-tactics-api/`))"
      - "traefik.http.routers.laser-tactics-api.middlewares=laser-tactics-api-stripprefix"
      - "traefik.http.routers.laser-tactics-api.entrypoints=websecure"
      - "traefik.http.routers.laser-tactics-api.tls=true"
      - "traefik.http.routers.laser-tactics-api.tls.certresolver=myresolver"
      - "traefik.http.services.laser-tactics-api.loadbalancer.server.port=80"
      - "traefik.docker.network=traefik_default"
  db:
    image: postgres:13.0-alpine
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=laserchess
    expose:
      - 5432

volumes:
  postgres_data:

networks:
  web:
    name: traefik_default
    external: true
